#server.servlet.context-path=/order

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://192.168.73.137:3306/order?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = root
spring.datasource.password = admin
#spring.datasource.initialization-mode=always
spring.datasource.schema=classpath:init.sql

spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-while-idle=true

#日志文件
logging.file=
logging.file.max-size=10MB
#logging.level.web=warn
#logging.level.root=debug
#logging.level.sql=debug
logging.level.com.order.web=debug



mybatis.type-aliases-package = com.order.web.pojo

mybatis.mapper-locations = classpath:mapper/*.xml


spring.aop.auto=true

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.73.137
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.lettuce.shutdown-timeout=0
#spring.redis.timeout=0

spring.mail.host=smtp.163.com
spring.mail.username=wydlink@163.com
spring.mail.password=wuyadong2013

#scheduler实例名称。#

#org.quartz.scheduler.instanceName =MyScheduler
#配置线程池的容量，即表示同时最多可运行的线程数量
org.quartz.threadPool.threadCount =3  
#job存储方式，RAMJobStore是使用JobStore最简单的一种方式，它也是性能最高效的，顾名思义，JobStore是把它的数据都存储在RAM中，
# 这也是它的快速和简单配置的原因；JDBCJobStore也是一种相当有名的JobStore，它通过JDBC把数据都保存到数据库中，
# 所以在配置上会比RAMJobStore复杂一些，而且不像RAMJobStore那么快，但是当我们对数据库中的表的主键创建索引时，性能上的缺点就不是很关键的了。
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

